*, *::before, *::after {
  box-sizing: border-box;
}

html, body {
  margin: 0;
  padding: 0;
  height: 100%;
  min-height: 100%;
  font-family: Ubuntu, 'Segoe UI', 'Helvetica Neue', Roboto, Verdana, sans-serif;
  background: #fafafa;
}

#cover {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.4);
  z-index: 2;
  visibility: hidden;
  opacity: 0;
  transition: visibility 0s 0.3s, opacity 0.3s;
}

.modal {
  position: absolute;
  left: 50%;
  top: 3rem;
  width: 600px;
  min-height: 8rem;
  background: white;
  padding: 0.5rem;
  max-width: 95%;
  opacity: 0;
  transform: translate(-50%, calc(-100% - 4rem));
  transition: transform 0.3s ease-in, opacity 0.3s;
  z-index: 3;
  box-shadow: 0 8px 16px rgba(0,0,0,0.3);
}

.modal h2 {
  margin: 0;
  padding: 0;
  line-height: 3rem;
  font-weight: 400;
  border-bottom: 1px solid #ccc;
}

.modal .actions {
  margin-bottom: 0;
}

input:checked + .modal {
  opacity: 1;
  transform: translate(-50%, 0);
  transition: transform 0.3s ease-out, opacity 0s;
}

input.toggleCover:checked ~ #cover {
  opacity: 1;
  visibility: visible;
  transition: visibility 0s, opacity 0.3s;
}

header {
  margin-bottom: 1rem;
}

header a {
  color: #337ab7;
  padding: 0 0.5rem;
  position: relative;
  font-size: 0.875rem;
  text-decoration: none;
}

header a:not(:last-of-type)::after {
  content: '|';
  position: absolute;
  top: 0;
  right: -3px;
  color: black;
}

.viewSelectionContainer {
  border-bottom: 1px solid #ddd;
}

.viewSelectionContainer label {
  display: inline-block;
  padding: 0 3rem 0 1rem;
  margin: 0 0.5rem -1px;
  font-weight: 500;
  line-height: 2.5rem;
  border-top-left-radius: 2px;
  border-top-right-radius: 2px;
  background: white;
  box-shadow: inset 0 -2px 1px -1px #ddd;
  cursor: pointer;
  position: relative;
}

.viewSelectionContainer label::after {
  content: '0';
  position: absolute;
  width: 1.5rem;
  height: 1.25rem;
  line-height: 1.25rem;
  color: white;
  font-size: 0.9rem;
  font-weight: 400;
  border-radius: 0.625rem;
  top: 0.625rem;
  right: 1rem;
  background: #ef5350;
  text-align: center;
}

.viewSelectionContainer label[data-total=""]::after {
  content: '0';
}

.viewSelectionContainer label:not([data-total=""])::after {
  content: attr(data-total);
}

.viewSelectionContainer label:nth-of-type(2)::after {
  background: #1e88e5;
}

.viewSelectionContainer label:nth-of-type(3)::after {
  background: #009688;
}

input[name=view] {
  display: none;
}

input:nth-of-type(1):checked ~ .viewSelectionContainer label:nth-of-type(1) {
  box-shadow: 0 -2px 1px -1px #ddd,
              2px 0 1px -1px #ddd,
              -2px 0 1px -1px #ddd;
  border-bottom-color: white;
}

input:nth-of-type(2):checked ~ .viewSelectionContainer label:nth-of-type(2) {
  box-shadow: 0 -2px 1px -1px #ddd,
              2px 0 1px -1px #ddd,
              -2px 0 1px -1px #ddd;
  border-bottom-color: white;
}

input:nth-of-type(3):checked ~ .viewSelectionContainer label:nth-of-type(3) {
  box-shadow: 0 -2px 1px -1px #ddd,
              2px 0 1px -1px #ddd,
              -2px 0 1px -1px #ddd;
  border-bottom-color: white;
}

section.view {
  display: none;
}

input:nth-of-type(1):checked ~ section.view:nth-of-type(1),
input:nth-of-type(2):checked ~ section.view:nth-of-type(2),
input:nth-of-type(3):checked ~ section.view:nth-of-type(3) {
  display: block;
}

main {
  display: block;
  padding: 8px 15px;
  width: 1170px;
  max-width: 100%;
  margin: 0 auto;
  overflow: visible;
  background: white;
  height: 100%;
  min-height: 100%;
}

h1 {
  font-size: 2rem;
  color: #46647e;
  margin: 0 0 2rem;
  line-height: 3rem;
  font-weight: 300;
}

h4 {
  font-weight: 300;
  font-size: 1.25rem;
}

ul {
  list-style: none;
  padding: 0;
}

ul li {
  display: block;
  line-height: 1.5rem;
}

ul li span {
  display: inline-block;
  width: 25%;
  padding: 0 0.5rem 0 0.25rem;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

ul li span a {
  text-decoration: none;
  color: #337ab7;
  display: block;
}

section > ul > li:first-of-type {
  background: #eee;
  height: 3rem;
  line-height: 3rem;
}

ul li span:last-of-type,
.modal .actions {
  text-align: right;
}

ul li span:last-of-type:nth-of-type(3) {
  margin-left: 25%;
}

ul .list {
  min-height: 8rem;
  max-height: calc(100vh - 16rem);
  overflow: auto;
  position: relative;
}

ul .list > li:nth-of-type(even) {
  background: #fcfcfc;
}

ul .list:empty::before {
  position: absolute;
  top: 50%;
  left: 50%;
  max-width: 50%;
  transform: translate(-50%, -50%);
  font-style: italic;
  color: #999;
}

#recording .list:empty::before {
  content: 'No fallback recordings active right now';
}

#queue .list:empty::before {
  content: 'No CAs queued for checking';
}

#completed .list:empty::before {
  content: 'No completed recordings awaiting action';
}

#completed .list > li {
  overflow: hidden;
  height: 1.5rem;
  transition: height 0.5s;
}

#completed .list > li > span:first-of-type {
  position: relative;
}

#completed .list > li[data-state] > span:first-of-type {
  padding-left: 1.5rem;
}
#completed .list > li[data-state] > span:first-of-type::before,
#completed .list > li[data-state] > span:first-of-type::after {
  content: '';
  position: absolute;
  cursor: help;
}

#completed .list > li[data-state=unneeded] > span:first-of-type::before {
  width: 1rem;
  height: 1rem;
  top: 0.25rem;
  left: 0.25rem;
  background: linear-gradient(205deg, #009688 0%, #009688 30%, transparent 30%, transparent calc(200%/3), #009688 calc(200%/3)),
              linear-gradient(115deg, transparent 0%, transparent 50%, white calc(50% + 1px), transparent calc(50% + 2px)),
              linear-gradient(150deg, #009688 0%, #009688 40%, transparent 40%, transparent calc(200%/3), #009688 calc(200%/3)),
              linear-gradient(60deg, transparent 0%, transparent calc(100%/3), white calc(100%/3 + 1px), transparent calc(100%/3 + 2px)),
              #009688;
  border-radius: 50%;
}

#completed .list > li[data-state=ingestable] > span:first-of-type::before {
  width: 1rem;
  height: 1rem;
  line-height: 1rem;
  top: 0.25rem;
  left: 0.25rem;
  border-radius: 50%;
  content: '!';
  color: white;
  text-align: center;
  background: #1e88e5;
  font-size: 0.9rem;
  font-family: Georgia, serif;
}

#completed .list > li[data-state=unusable] > span:first-of-type::before {
  width: 1rem;
  height: 1rem;
  line-height: 0.875rem;
  top: 0.25rem;
  left: 0.25rem;
  border-radius: 50%;
  background: radial-gradient(circle at center, transparent 0%, transparent 50%, #ef5350 50%, #ef5350 100%),
              linear-gradient(135deg, transparent 0%, transparent calc(50% - 1px), white 50%,
                              transparent calc(50% + 1px), transparent 100%),
              linear-gradient(45deg, transparent 0%, transparent calc(50% - 1px), white 50%,
                              transparent calc(50% + 1px), transparent 100%),
              #ef5350;
  font-size: 0.9
}

#completed .list > li[data-state=ingested] > span:first-of-type::before {
  width: 1rem;
  height: 1rem;
  top: 0.25rem;
  left: 0.25rem;
  background: linear-gradient(205deg, #009688 0%, #009688 30%, transparent 30%, transparent calc(200%/3), #009688 calc(200%/3)),
              linear-gradient(115deg, transparent 0%, transparent 50%, white calc(50% + 1px), transparent calc(50% + 2px)),
              linear-gradient(150deg, #009688 0%, #009688 40%, transparent 40%, transparent calc(200%/3), #009688 calc(200%/3)),
              linear-gradient(60deg, transparent 0%, transparent calc(100%/3), white calc(100%/3 + 1px), transparent calc(100%/3 + 2px)),
              #009688;
  border-radius: 50%;
  z-index: 1;
}

#completed .list > li[data-state].ingesting > span:first-of-type::before,
#completed .list > li[data-state].ingesting > span:first-of-type::after {
  width: 8px;
  height: 8px;
  border: 4px solid #009688;
  top: calc(0.75rem - 4px);
  left: calc(0.75rem - 2px);
  border-radius: 50%;
  opacity: 0;
  animation: supernova 1s linear infinite;
  animation-fill-mode: backwards;
  content: '';
  background: none;
}

#completed .list > li[data-state].ingesting > span:first-of-type::after {
  animation: supernova 1s linear 0.5s infinite;
}

#completed li ul {
  padding: 0.5rem;
  border: 1px solid #eee;
  position: relative;
  overflow: hidden;
  height: 13rem;
  opacity: 0;
  transition: opacity 0.3s;
}

#completed input:checked + li ul {
  opacity: 1;
  transition: opacity 0.3s 0.3s;
}

#completed li ul::before {
  position: absolute;
  content: 'ffprobe';
  font-size: 4rem;
  bottom: 0.5rem;
  left: 1rem;
  color: #f2f2f2;
}

#completed li ul button,
#completed li ul li:last-of-type a,
#completed li ul li:last-of-type label,
.modal p.actions * {
  border: none;
  color: white;
  margin-left: 0.5rem;
  height: 2rem;
  line-height: 2rem;
  text-decoration: none;
  font-size: 0.9rem;
  display: inline-block;
  vertical-align: top;
  padding: 0 0.5rem;
  font-family: Ubuntu, 'Segoe UI', 'Helvetica Neue', Roboto, Verdana, sans-serif;
  font-weight: 300;
}

.info {
  background: #1e88e5;
}

.danger {
  background: #ef5350;
}

.success {
  background: #009688;
}

#completed li ul li:last-of-type button {
  position: relative;
  z-index: 1;
}



#completed li ul button:last-of-type::before {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  background: #009688;
  content: '';
}

#completed li ul button[disabled],
#completed li[data-state=unusable] ul button {
  font-weight: 400;
  cursor: not-allowed;
}

#completed li[data-state=unusable] ul button {
  pointer-events: none;
}

#completed li ul button[disabled]:last-of-type::before,
#completed li[data-state=unusable] ul button:last-of-type::before {
  background: #999;
}

#completed li ul button:last-of-type::after {
  content: 'Ingest recording';
}

#completed li ul button[disabled]:last-of-type::after {
  content: 'Ingested already';
}

#completed li[data-state=unusable] ul button:last-of-type::after {
  content: 'Unable to ingest failed recording';
}


#completed li.ingesting ul button:last-of-type {
  text-shadow: 0 1px black;
}

#completed li.ingesting ul button:last-of-type::before {
  z-index: -2;
}

button progress {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -2;
}

#completed li ul li span:first-child {
  text-transform: capitalize;
}

#completed li ul li span:last-child {
  width: 75%;
  text-align: left;
}

#completed li ul li span:only-child {
  text-align: right;
  width: 100%;
  margin-top: 2rem;
}

#completed .list input:checked + li {
  height: 16rem;
}

#completed label {
  cursor: pointer;
}

#completed label:not(.action)::before {
  content: 'More detail';
}

#completed input:checked + li label:not(.action)::before {
  content: 'Less detail';
}

.hidden {
  display: none;
}

button, label {
  cursor: pointer;
  outline: none;
}

.close {
  position: absolute;
  width: 1.5rem;
  height: 1.5rem;
  top: 0.75rem;
  right: 0.75rem;
  background: linear-gradient(45deg, #aaa 0%, #aaa 6px, transparent 6px, transparent calc(100% - 6px), #aaa calc(100% - 6px), #aaa 100%),
              linear-gradient(135deg, #aaa 0%, #aaa 6px, transparent 6px, transparent calc(100% - 6px), #aaa calc(100% - 6px), #aaa 100%),
              linear-gradient(45deg, transparent 0%, transparent calc(50% - 1px), white calc(50% - 1px), white calc(50% + 1px), transparent calc(50% + 1px)),
              linear-gradient(135deg, transparent 0%, transparent calc(50% - 1px), white calc(50% - 1px), white calc(50% + 1px), transparent calc(50% + 1px)),
              linear-gradient(45deg, transparent 0%, transparent calc(50% - 1px), white calc(50% - 1px), white calc(50% + 1px), transparent calc(50% + 1px)),
              #aaa;
}

.pull-left {
  float: left;
}

.pull-right {
  float: right;
}

.btn {
  border: none;
  color: white;
  height: 2rem;
  line-height: 2rem;
  font-size: 0.9rem;
  font-weight: 300;
  font-family: Ubuntu, 'Segoe UI', 'Helvetica Neue', Roboto, Verdana, sans-serif;
}

.checkButton {
  position: relative;
  transition: padding-right 0.3s;
}

.checkButton[disabled] {
  pointer-events: none;
  padding-right: 2.5rem;
  font-style: italic;
}

.checkButton::after {
  opacity: 0;
  transition: opacity 0.3s;
  content: '';
  animation: spin 1s linear infinite;
}

.checkButton[disabled]::after {
  content: '';
  position: absolute;
  width: 1.5rem;
  height: 1.5rem;
  top: 0.25rem;
  right: 0.25rem;
  background: linear-gradient(90deg, transparent 0%, transparent calc(50% - 2px), #1e88e5 calc(50% - 2px), #1e88e5 calc(50% + 2px), transparent calc(50% + 2px)),
linear-gradient(0deg, transparent 0%, transparent calc(50% - 2px), #1e88e5 calc(50% - 2px), #1e88e5 calc(50% + 2px), transparent calc(50% + 2px)),
              radial-gradient(circle at center, transparent 0%, transparent calc(100% - 8px), white calc(100% - 8px), white 100%);
  border-radius: 50%;
  opacity: 1;
  transition: opacity 0.3s 0.1s;
}

#recCheck[disabled]::after {
  background: linear-gradient(90deg, transparent 0%, transparent calc(50% - 2px), #009688 calc(50% - 2px), #009688 calc(50% + 2px), transparent calc(50% + 2px)),
linear-gradient(0deg, transparent 0%, transparent calc(50% - 2px), #009688 calc(50% - 2px), #009688 calc(50% + 2px), transparent calc(50% + 2px)),
              radial-gradient(circle at center, transparent 0%, transparent calc(100% - 8px), white calc(100% - 8px), white 100%);
}

#caCheck::before {
  content: 'Check CAs now';
}

#caCheck[disabled]::before {
  content: 'Checking CAs...';
}

#recCheck::before {
  content: 'Compare recordings against server';
}

#recCheck[disabled]::before {
  content: 'Running comparison check of recordings';
}

.viewSelectionContainer button {
  display: none;
}

input[name=view]:nth-of-type(2):checked ~ .viewSelectionContainer button:nth-of-type(1),
input[name=view]:nth-of-type(3):checked ~ .viewSelectionContainer button:nth-of-type(2) {
  display: block;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

progress[value] {
  -webkit-appearance: none;
  appearance: none;
}

progress[value]::-webkit-progress-bar {
  background-color: #eee;
  border-radius: 2px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.2) inset;
}

progress[value]::-webkit-progress-value {
  border-radius: 2px;
  background: #009688;
}

@keyframes supernova {
  0% {
    opacity: 1;
    width: 8px;
    height: 8px;
    top: calc(0.75rem - 4px);
    left: calc(0.75rem - 4px);
/*    transform: translate(0,0);*/
  }
  100% {
    opacity: 0;
    width: 2rem;
    height: 2rem;
    top: -0.25rem;
    left: -0.25rem;
 /*   transform: translate(-50%,-50%);*/
  }
}
